/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;

import Backend.CentroVacinacao;
import Backend.Marcacao;
import Serializacao.Serializacao;
import Backend.Sistema;
import Backend.Utente;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Month;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author josep
 */
public class FazerMarcacao extends javax.swing.JFrame {

    private Serializacao serializacao;
    private Sistema sistema;

    /**
     * Creates new form FazerMarcacao
     */
    public FazerMarcacao(Sistema sistema, Serializacao serializacao) {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.sistema = sistema;
        this.serializacao = serializacao;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        marcacaoMins = new javax.swing.JSpinner();
        marcacaoHora = new javax.swing.JSpinner();
        confirmarMarcacao = new javax.swing.JButton();
        calendario = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("FAZER MARCACÃO");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 184, 43));

        marcacaoMins.setModel(new javax.swing.SpinnerNumberModel(0, 0, 45, 15));
        jPanel1.add(marcacaoMins, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 81, -1, -1));

        marcacaoHora.setModel(new javax.swing.SpinnerNumberModel(9, 9, 19, 1));
        jPanel1.add(marcacaoHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 81, -1, -1));

        confirmarMarcacao.setBackground(new java.awt.Color(255, 255, 255));
        confirmarMarcacao.setForeground(new java.awt.Color(0, 204, 255));
        confirmarMarcacao.setText("Confirmar");
        confirmarMarcacao.setBorderPainted(false);
        confirmarMarcacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarMarcacaoActionPerformed(evt);
            }
        });
        jPanel1.add(confirmarMarcacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 100, -1));

        calendario.setCalendar(jCalendar1.getCalendar());
        jPanel1.add(calendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 49, 169, 20));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 204, 255));
        jButton1.setText("Voltar");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 152, 100, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login-image.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 220));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 409, 213));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmarMarcacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarMarcacaoActionPerformed
        int dia = calendario.getJCalendar().getDayChooser().getDay();
        int ano = calendario.getJCalendar().getYearChooser().getYear();
        int mes = calendario.getJCalendar().getMonthChooser().getMonth();
        int hora = Integer.parseInt(marcacaoHora.getValue().toString());
        int mins = Integer.parseInt(marcacaoMins.getValue().toString());
        LocalDateTime dataMarcacao = LocalDateTime.of(ano, mes + 1, dia, hora, mins);

        Utente u = (Utente) sistema.getUtilizadorLigado();
        CentroVacinacao centro = u.getCentroVac();

        if (centro == null) {
            JOptionPane.showMessageDialog(this, "Associe primeiro um centro!!");
            return;
        }

        Marcacao marcacoes = centro.getMarcacoes();
        ArrayList<Utente> utente = new ArrayList<>();
        utente.add(u);
        if (marcacoes == null) {
            Marcacao marcacoesTemp = new Marcacao();
            marcacoesTemp.agendarMarcacao(dataMarcacao, u);
            centro.setMarcacoes(marcacoesTemp);
            JOptionPane.showMessageDialog(this, "Marcação feita com sucesso!");
            dispose();
        } else {
            if (marcacoes.getHoraUtente(utente) != null) {
                JOptionPane.showMessageDialog(this, "Já contêm uma marcação no sistema");
                return;
            }
            if (marcacoes.verificarMarcacao(dataMarcacao)) {
                JOptionPane.showMessageDialog(this, "Já existe marcação para esta data.");
            } else {
                marcacoes.agendarMarcacao(dataMarcacao, u);
                centro.setMarcacoes(marcacoes);
                JOptionPane.showMessageDialog(this, "Marcação feita com sucesso!");
                dispose();
            }

        }

        JanelaUtente ju = new JanelaUtente(sistema, serializacao);

        ju.setVisible(true);


    }//GEN-LAST:event_confirmarMarcacaoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        JanelaUtente ju = new JanelaUtente(sistema, serializacao);
        ju.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser calendario;
    private javax.swing.JButton confirmarMarcacao;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner marcacaoHora;
    private javax.swing.JSpinner marcacaoMins;
    // End of variables declaration//GEN-END:variables
}
