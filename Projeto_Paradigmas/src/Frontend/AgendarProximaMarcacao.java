/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;

import Backend.CentroVacinacao;
import Backend.Gestor;
import Backend.Marcacao;
import Backend.Sistema;
import Backend.Utente;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import Serializacao.Serializacao;

/**
 *
 * @author josep
 */
public class AgendarProximaMarcacao extends javax.swing.JFrame {

    private Sistema sistema;
    private Utente utente;
    private ConsultarMarcacoesGestor listagem2;
    private LocalDateTime hora;
    private Serializacao serializacao;

    /**
     * Creates new form AgendarProximaMarcacao
     */
    public AgendarProximaMarcacao(Sistema sistema, Serializacao serializacao, LocalDateTime hora, Utente utente, ConsultarMarcacoesGestor listagem2) {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.sistema = sistema;
        this.listagem2 = listagem2;
        this.utente = utente;
        this.hora = hora;
        this.serializacao = serializacao;
    }

    public void AgendarProximaMarcacao() {
        int dia = calendario.getJCalendar().getDayChooser().getDay();
        int ano = calendario.getJCalendar().getYearChooser().getYear();
        int mes = calendario.getJCalendar().getMonthChooser().getMonth();
        int hours = Integer.parseInt(marcacaoHora.getValue().toString());
        int mins = Integer.parseInt(marcacaoMins.getValue().toString());
        LocalDateTime dataMarcacao = LocalDateTime.of(ano, mes + 1, dia, hours, mins);

        CentroVacinacao centro = sistema.getListaCentros().procurarCentro((Gestor) sistema.getUtilizadorLigado());
        ArrayList<Utente> u = new ArrayList<Utente>();
        u.add(utente);
        Marcacao marcacoes = centro.getMarcacoes();
        if (marcacoes == null) {
            Marcacao marcacoesTemp = new Marcacao();
            marcacoesTemp.agendarMarcacao(dataMarcacao, utente);
            centro.setMarcacoes(marcacoesTemp);
            JOptionPane.showMessageDialog(this, "Marcação feita com sucesso!");
            dispose();
            RegistarInoculacao ri = new RegistarInoculacao(sistema, serializacao, utente, hora, listagem2);
            ri.setVisible(true);

        }
        if (marcacoes.getHoraUtente(u) != null) {
            JOptionPane.showMessageDialog(this, "Já contêm uma marcação no sistema");
            dispose();
            RegistarInoculacao ri = new RegistarInoculacao(sistema, serializacao, utente, hora, listagem2);
            ri.setVisible(true);
            return;
        }
        if (marcacoes.verificarMarcacao(dataMarcacao)) {
            JOptionPane.showMessageDialog(this, "Já existe marcação para esta data.");
        } else {
            marcacoes.agendarMarcacao(dataMarcacao, utente);
            centro.getMarcacoes().agendarMarcacao(dataMarcacao, utente);
            JOptionPane.showMessageDialog(this, "Marcação feita com sucesso!");
            dispose();
            RegistarInoculacao ri = new RegistarInoculacao(sistema, serializacao, utente, hora, listagem2);
            ri.setVisible(true);
        }

        listagem2.atualizar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendario = new com.toedter.calendar.JDateChooser();
        marcacaoHora = new javax.swing.JSpinner();
        marcacaoMins = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(calendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 193, 20));

        marcacaoHora.setModel(new javax.swing.SpinnerNumberModel(9, 9, 19, 1));
        getContentPane().add(marcacaoHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        marcacaoMins.setModel(new javax.swing.SpinnerNumberModel(0, 0, 45, 15));
        getContentPane().add(marcacaoMins, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 29, -1));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 204, 255));
        jButton1.setText("Confirmar");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, -1, 25));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 204, 255));
        jButton2.setText("Voltar");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 152, 78, 30));

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 255));
        jLabel2.setText("AGENDAR PRÓXIMA MARCAÇÃO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login-image.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AgendarProximaMarcacao();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        RegistarInoculacao ri = new RegistarInoculacao(sistema, serializacao, utente, hora, listagem2);
        ri.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser calendario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner marcacaoHora;
    private javax.swing.JSpinner marcacaoMins;
    // End of variables declaration//GEN-END:variables
}
